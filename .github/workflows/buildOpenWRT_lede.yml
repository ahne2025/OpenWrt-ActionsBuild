####################################
#  update for 2025/03/04 00:16:36  #
####################################

name: ÁºñËØëÂõ∫‰ª∂_lede

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      resource_directory:
        type: choice
        description: 'Ë∑ØÁî±Âô®ËµÑÊ∫êÁõÆÂΩï'
        options:
          - "P2W_R619AC-128M"
          - "XIAOMI-4A_100M"
          - "XIAOMI-4A_GIGABit"
          - "REDMI_AX6000"
      repo_branch:
        type: choice
        description: 'ÁâàÊú¨ÂàÜÊîØ'
        options:
          - "master"
      feeds_file:
        type: choice
        description: 'ÊõøÊç¢ËΩØ‰ª∂Ê∫êÈÖçÁΩÆ(feeds.conf.default)'
        options:
        - "true"
        - "false"
      config_file:
        description: 'config Êñá‰ª∂ÂêçÁß∞(.config)'
        default: 'lede.config'
      files_path:
        type: choice
        description: 'ÂØºÂÖ•Ë°•‰∏ÅÁõÆÂΩï(filesÁõÆÂΩï)'
        options:
        - "true"
        - "false"
      openwrt_patch:
        type: choice
        description: 'ÊâßË°å‰ªìÂ∫ìËÑöÊú¨(openwrt_patch.sh)'
        options:
        - "true"
        - "false"
      befor_patch:
        type: choice
        description: 'ÊâßË°åÁºñËØëÂâçËÑöÊú¨(make_befor.sh)'
        options:
        - "true"
        - "false"
      after_patch:
        type: choice
        description: 'ÊâßË°åÁºñËØëÂêéËÑöÊú¨(make_after.sh)'
        options:
        - "true"
        - "false"
      upload_release:
        type: choice
        description: 'ÂèëÂ∏ÉÂà∞release'
        options:
        - "false"
        - "true"
env:
  TIMEZONE: Asia/Shanghai
  
  UPLOAD_ACTIONSRUNS: true
  
  Resoure_DIR: ${{ github.event.inputs.resource_directory }}
  
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  
  REPO_BRANCH: ${{ github.event.inputs.repo_branch }}
  CONFIG_FILE: '${{ github.event.inputs.resource_directory }}/${{ github.event.inputs.config_file }}'
  FEEDS_FILE: '${{ github.event.inputs.resource_directory }}/feeds.conf.default'
  REPLACE_FEEDS: ${{ github.event.inputs.feeds_file }}
  LOAD_FILES: ${{ github.event.inputs.files_path }}
  FILES_PATH: '${{ github.event.inputs.resource_directory }}/files'
  RUN_OPENWRTPATCH: ${{ github.event.inputs.openwrt_patch }}
  OPENWRT_PATCH: '${{ github.event.inputs.resource_directory }}/openwrt_patch.sh'
  RUN_BEFORPATCH: ${{ github.event.inputs.befor_patch }}
  BEFOR_PATCH: '${{ github.event.inputs.resource_directory }}/make_befor.sh'
  RUN_AFTERPATCH: ${{ github.event.inputs.after_patch }}
  AFTER_PATCH: '${{ github.event.inputs.resource_directory }}/make_after.sh'
  UPLOAD_RELEASE: ${{ github.event.inputs.upload_release }}
  
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Ê£ÄÂá∫‰ªìÂ∫ìÊï∞ÊçÆ
      uses: actions/checkout@main

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
        #Èùû‰∫§‰∫íÂºèÁéØÂ¢É
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge dotnet* firefox ghc* google* llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E apt-get update -y
        sudo -E apt-get install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf g++ file clang nano genisoimage python3.8 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev libfuse-dev python3-setuptools
        pip install aligo
        sudo -E apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h 
        sudo timedatectl set-timezone "$TIMEZONE"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: ÊèêÂèñÁ≥ªÁªü‰ø°ÊÅØ
      working-directory: /workdir
      run: |
         echo -e "CPU: $(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
         echo -e "UserName: $(whoami) \n"
         echo -e "SystemInfo: \n$(lsb_release  -a 2>&1 | grep -vi 'No LSB') \n"
         
    - name: ÊãâÂèñOpenWRT‰ªìÂ∫ì
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: Ê£ÄÊü•Êñá‰ª∂Áä∂ÊÄÅ
      id: check
      run: |
        [ -e $FEEDS_FILE ] && echo ":: name=feeds::success">> $GITHUB_OUTPUT
        [ -e $FILES_PATH ] && echo ":: name=files::success">> $GITHUB_OUTPUT
        [ -e $OPENWRT_PATCH ] && echo ":: name=patch::success">> $GITHUB_OUTPUT
        [ -e $BEFOR_PATCH ] && echo ":: name=befor::success">> $GITHUB_OUTPUT
        [ -e $AFTER_PATCH ] && echo ":: name=after::success">> $GITHUB_OUTPUT
    
    - name: ÊõøÊç¢ËΩØ‰ª∂Ê∫êÈÖçÁΩÆ
      if: env.REPLACE_FEEDS == 'true' && steps.check.outputs.feeds == 'success'
      run: |
        [ -e $FEEDS_FILE ] && rm -f openwrt/feeds.conf.default
        [ -e $FEEDS_FILE ] && mv $FEEDS_FILE openwrt/feeds.conf.default
    
      
    - name: ÂØºÂÖ•Ë°•‰∏ÅÁõÆÂΩï
      if: env.LOAD_FILES == 'true' && steps.check.outputs.files == 'success'
      run: mv $FILES_PATH openwrt/files
        
    - name: ÊâßË°å‰ªìÂ∫ìËÑöÊú¨
      if: env.RUN_OPENWRTPATCH == 'true' && steps.check.outputs.patch == 'success'
      run: |
        chmod +x $OPENWRT_PATCH
        cd openwrt
        $GITHUB_WORKSPACE/$OPENWRT_PATCH
        
    - name: Êõ¥Êñ∞Âπ∂ÂÆâË£ÖËΩØ‰ª∂Ê∫ê
      run: |
        cd openwrt 
        ./scripts/feeds update -a && ./scripts/feeds install -a
        ./scripts/feeds update -a && ./scripts/feeds install -a
        
        
    - name: Âä†ËΩΩÂõ∫‰ª∂ÈÖçÁΩÆ
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cat openwrt/.config
        
        
    - name: ÊâßË°åÁºñËØëÂâçËÑöÊú¨
      if: env.RUN_BEFORPATCH == 'true' && steps.check.outputs.befor == 'success'
      run: |
        chmod +x $BEFOR_PATCH
        cd openwrt
        $GITHUB_WORKSPACE/$BEFOR_PATCH
        
    - name: ‰∏ãËΩΩÁºñËØëÊâÄÈúÄ
      id: makedownload
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
        
    - name: ÁºñËØëÂõ∫‰ª∂
      id: makefirmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread cpu"
        echo "Start Time: "$(date +"%Y/%m/%d %H:%M:%S")""
        make -j$(nproc) V=s
        echo "End Time: "$(date +"%Y/%m/%d %H:%M:%S")""
        echo ":: name=status::success">> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    
    - name: ÊâßË°åÁºñËØëÂêéËÑöÊú¨
      if: env.RUN_AFTERPATCH == 'true' && steps.check.outputs.after == 'success'
      run: |
        chmod +x $AFTER_PATCH
        cd openwrt
        $GITHUB_WORKSPACE/$AFTER_PATCH
    
    - name: Êï¥ÁêÜÊñá‰ª∂
      id: organize
      if: steps.makefirmware.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo ":: name=status::success">> $GITHUB_OUTPUT
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂
      uses: actions/upload-artifact@main
      if: env.UPLOAD_ACTIONSRUNS == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: lede_OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
    
    - name: Ê∏ÖÁêÜActionsRunsÊóßÊï∞ÊçÆ
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 5
        
    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: releasetag
      if: env.UPLOAD_RELEASE == 'true' && steps.makefirmware.outputs.status == 'success' && !cancelled()
      run: |
        echo ":: name=release_tag::$(date +"%Y.%m.%d-%H%M")">> $GITHUB_OUTPUT
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo ":: name=status::success">> $GITHUB_OUTPUT
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Release
      uses: softprops/action-gh-release@v1
      if: env.UPLOAD_RELEASE == 'true' && steps.releasetag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.releasetag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
        
    - name: Ê∏ÖÁêÜReleasesÊóßÊï∞ÊçÆ
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
